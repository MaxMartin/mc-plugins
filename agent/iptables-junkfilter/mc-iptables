#!/usr/bin/ruby

# Client program for the mcollective iptables agent found at http://code.google.com/p/mcollective-plugins/wiki/AgentIptablesJunkfilter
#
# Released under the GPLv2

require 'mcollective'

oparser = MCollective::Optionparser.new({}, "filter")

options = oparser.parse{|parser, options|
    parser.define_head "Manage remote iptables"
    parser.banner = "Usage: sh-iptables <block|unblock|isblocked> <ip address>"
}

# confine machines we want to access to ones with
# the right agent only
options[:filter]["agent"] = "iptables"

if ARGV.length == 2
    action = ARGV.shift
    ipaddress = ARGV.shift
else
    puts("Please specify an action and ip address")
    exit 1
end

begin
    client = MCollective::Client.new(options[:config])

    req = {"command" => action, "ip" => ipaddress}

    stats = client.discovered_req(req, "iptables", options) do |resp|
        next if resp == nil

        result = resp[:body]

        printf("%-40s %s\n", resp[:senderid], result["status"])
    end
rescue Exception => e
    raise e
end

client.display_stats(stats, options, "iptables agent stats")

# vi:tabstop=4:expandtab:ai
